// Code generated by protoc-gen-go.
// source: requests.proto
// DO NOT EDIT!

/*
Package remote is a generated protocol buffer package.

It is generated from these files:
	requests.proto

It has these top-level messages:
	RemoteRequest
	RemoteResponse
*/
package remote

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// This request is used for both asking data and requesting to execute commands on the remote system
//
type RemoteRequest struct {
	RequestTag  string `protobuf:"bytes,1,opt,name=request_tag,json=requestTag" json:"request_tag,omitempty"`
	RequestBody string `protobuf:"bytes,2,opt,name=request_body,json=requestBody" json:"request_body,omitempty"`
	TargetHost  string `protobuf:"bytes,3,opt,name=target_host,json=targetHost" json:"target_host,omitempty"`
	RequestMeta string `protobuf:"bytes,4,opt,name=request_meta,json=requestMeta" json:"request_meta,omitempty"`
	RequestId   string `protobuf:"bytes,5,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *RemoteRequest) Reset()                    { *m = RemoteRequest{} }
func (m *RemoteRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoteRequest) ProtoMessage()               {}
func (*RemoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RemoteRequest) GetRequestTag() string {
	if m != nil {
		return m.RequestTag
	}
	return ""
}

func (m *RemoteRequest) GetRequestBody() string {
	if m != nil {
		return m.RequestBody
	}
	return ""
}

func (m *RemoteRequest) GetTargetHost() string {
	if m != nil {
		return m.TargetHost
	}
	return ""
}

func (m *RemoteRequest) GetRequestMeta() string {
	if m != nil {
		return m.RequestMeta
	}
	return ""
}

func (m *RemoteRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type RemoteResponse struct {
	RequestId      string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	RequestTag     string `protobuf:"bytes,2,opt,name=request_tag,json=requestTag" json:"request_tag,omitempty"`
	RequestBody    string `protobuf:"bytes,3,opt,name=request_body,json=requestBody" json:"request_body,omitempty"`
	ResponseBody   string `protobuf:"bytes,4,opt,name=response_body,json=responseBody" json:"response_body,omitempty"`
	ResponseStatus string `protobuf:"bytes,5,opt,name=response_status,json=responseStatus" json:"response_status,omitempty"`
}

func (m *RemoteResponse) Reset()                    { *m = RemoteResponse{} }
func (m *RemoteResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoteResponse) ProtoMessage()               {}
func (*RemoteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RemoteResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RemoteResponse) GetRequestTag() string {
	if m != nil {
		return m.RequestTag
	}
	return ""
}

func (m *RemoteResponse) GetRequestBody() string {
	if m != nil {
		return m.RequestBody
	}
	return ""
}

func (m *RemoteResponse) GetResponseBody() string {
	if m != nil {
		return m.ResponseBody
	}
	return ""
}

func (m *RemoteResponse) GetResponseStatus() string {
	if m != nil {
		return m.ResponseStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*RemoteRequest)(nil), "remote.RemoteRequest")
	proto.RegisterType((*RemoteResponse)(nil), "remote.RemoteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HeyBuddy service

type HeyBuddyClient interface {
	ExecBuddy(ctx context.Context, in *RemoteRequest, opts ...grpc.CallOption) (*RemoteResponse, error)
}

type heyBuddyClient struct {
	cc *grpc.ClientConn
}

func NewHeyBuddyClient(cc *grpc.ClientConn) HeyBuddyClient {
	return &heyBuddyClient{cc}
}

func (c *heyBuddyClient) ExecBuddy(ctx context.Context, in *RemoteRequest, opts ...grpc.CallOption) (*RemoteResponse, error) {
	out := new(RemoteResponse)
	err := grpc.Invoke(ctx, "/remote.HeyBuddy/ExecBuddy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HeyBuddy service

type HeyBuddyServer interface {
	ExecBuddy(context.Context, *RemoteRequest) (*RemoteResponse, error)
}

func RegisterHeyBuddyServer(s *grpc.Server, srv HeyBuddyServer) {
	s.RegisterService(&_HeyBuddy_serviceDesc, srv)
}

func _HeyBuddy_ExecBuddy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeyBuddyServer).ExecBuddy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.HeyBuddy/ExecBuddy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeyBuddyServer).ExecBuddy(ctx, req.(*RemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeyBuddy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote.HeyBuddy",
	HandlerType: (*HeyBuddyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecBuddy",
			Handler:    _HeyBuddy_ExecBuddy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "requests.proto",
}

func init() { proto.RegisterFile("requests.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0xc9, 0x9d, 0x1e, 0xee, 0x78, 0xb7, 0x42, 0x40, 0x09, 0x82, 0xa8, 0x67, 0xa1, 0xd5,
	0x16, 0xda, 0x59, 0x1e, 0x28, 0x67, 0x61, 0xb3, 0xda, 0x2f, 0x39, 0x33, 0xac, 0x16, 0x67, 0xce,
	0x64, 0x16, 0xdc, 0x17, 0xb3, 0xf7, 0xcd, 0xc4, 0x4c, 0x22, 0x6e, 0x2c, 0xec, 0x92, 0x8f, 0x6f,
	0xfe, 0x99, 0x61, 0xa0, 0x74, 0xf8, 0xd6, 0xa1, 0x27, 0x5f, 0x6d, 0x9c, 0x25, 0x2b, 0x27, 0x0e,
	0xd7, 0x96, 0x70, 0xfe, 0x21, 0x60, 0x56, 0x87, 0x67, 0xcd, 0x82, 0x3c, 0x86, 0xdd, 0xe8, 0x36,
	0xa4, 0x5b, 0x25, 0x4e, 0xc4, 0x45, 0x51, 0x43, 0x44, 0x8f, 0xba, 0x95, 0xa7, 0x30, 0x4d, 0xc2,
	0xca, 0x9a, 0x5e, 0x8d, 0x82, 0x91, 0x8a, 0x16, 0xd6, 0xf4, 0xdf, 0x19, 0xa4, 0x5d, 0x8b, 0xd4,
	0x3c, 0x5b, 0x4f, 0x6a, 0xcc, 0x19, 0x8c, 0x96, 0xd6, 0xd3, 0xef, 0x8c, 0x35, 0x92, 0x56, 0x5b,
	0x83, 0x8c, 0x7b, 0x24, 0x2d, 0x8f, 0x20, 0x35, 0x6d, 0x5e, 0x8c, 0xda, 0x0e, 0x42, 0x11, 0xc9,
	0x9d, 0x99, 0x7f, 0x0a, 0x28, 0xd3, 0xe0, 0x7e, 0x63, 0x5f, 0x3d, 0x66, 0x15, 0x22, 0xab, 0xc8,
	0x17, 0x1b, 0xfd, 0xbb, 0xd8, 0xf8, 0xef, 0x62, 0x67, 0x30, 0x73, 0xb1, 0x1d, 0x3b, 0x3c, 0xf8,
	0x34, 0xc1, 0x20, 0x9d, 0xc3, 0xde, 0x8f, 0xe4, 0x49, 0x53, 0xe7, 0xe3, 0xf8, 0x65, 0xc2, 0x0f,
	0x81, 0x5e, 0xde, 0xc2, 0xce, 0x12, 0xfb, 0x45, 0x67, 0x4c, 0x2f, 0xaf, 0xa1, 0xb8, 0x79, 0xc7,
	0x27, 0xfe, 0xec, 0x57, 0x7c, 0x9e, 0x6a, 0x70, 0x9a, 0xc3, 0x83, 0x1c, 0x73, 0xda, 0x6a, 0x12,
	0x6e, 0x7a, 0xf5, 0x15, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xfa, 0xc5, 0x63, 0xe5, 0x01, 0x00, 0x00,
}
